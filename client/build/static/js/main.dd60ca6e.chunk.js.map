{"version":3,"sources":["actions.js","Header.js","BaseReactComponent.js","CreateMovie.js","Register.js","Floor.js","Login.js","Movie.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["setEmptyState","setState","name","password","locations","location","bluray","dvd","updateForm","field","className","value","updateCheckBox","checked","logout","fetch","then","res","catch","error","alert","getLocations","console","log","status","json","Promise","reject","fileChangeHandler","e","target","files","Header","currentUser","this","props","user","to","onClick","React","Component","BaseReactComponent","_subscription","subscribe","state","filterState","bind","filteredState","getState","isPlainObject","Error","unsubscribe","CreateMovie","locationList","addMovieForm","onSubmit","preventDefault","request","Request","method","body","JSON","stringify","headers","err","addMovie","type","onChange","required","map","id","Register","registerForm","register","Floor","source","planLoad","Axios","get","responseType","response","base64","btoa","Uint8Array","data","reduce","byte","String","fromCharCode","floor","encType","formData","FormData","append","uploadFile","src","alt","Login","loginForm","login","Movie","movie","imdbInfo","Year","Runtime","imdbRating","Genre","Director","Actors","prompt","movieList","filter","_id","softDelete","title","newMovieList","Main","movs","getMovies","key","App","resolve","cookie","exact","path","render","history","Boolean","window","hostname","match","startLogging","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dd60ca6e.chunk.js","sourcesContent":["import { getState, setState } from \"statezero\";\n\n// Initialize all state paths used by app as empty.\nexport const setEmptyState = () => {\n  setState(\"cookie\", false);\n  setState(\"currentUser\", null);\n  setState(\"loginForm\", { name: \"\", password: \"\" });\n  setState(\"registerForm\", { name: \"\", password: \"\" });\n  setState(\"addMovieForm\", { name: \"\", locations: \"\\\"Location\\\"\", location: \"\", bluray: false, dvd: false });\n  setState(\"selectedFile\", null);\n  setState(\"floor\", false);\n  setState(\"locationList\", []);\n  setState(\"movieList\", []);\n};\n\nexport const readCookie = () => {\n  const url = \"/auth/check-session\";\n  fetch(url).then(res => {\n    if (res.status === 200) return res.json();\n    else return Promise.resolve({});\n  }).then(json => {\n    if (json && json.currentUser) {\n      setState(\"currentUser\", json.currentUser);\n      setState(\"floor\", json.floor);\n    }\n    setState(\"cookie\", true);\n  }).catch(error => {\n    alert(error);\n  });\n};\n\nexport const updateForm = field => {\n  const { className, name, value } = field;\n  // set className.name = value in state\n  setState(`${className}.${name}`, value);\n};\n\nexport const updateCheckBox = field => {\n  const { className, name, checked } = field;\n  setState(`${className}.${name}`, checked);\n}\n\nexport const register = (e) => {\n  e.preventDefault();\n  console.log(\"try register\");\n  const request = new Request(\"/auth/register\", {\n    method: \"post\",\n    body: JSON.stringify(getState(\"registerForm\")),\n    headers: {\n      'Accept': \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  setState(\"registerForm.password\", \"\");\n  fetch(request).then(res => {\n    return res.json();\n  }).then(json => {\n    if (json.error) alert(json.error);\n  }).catch(error => {\n    alert(\"something went wrong :(\");\n  });\n}\n\nexport const login = (e) => {\n  e.preventDefault();\n  const request = new Request(\"/auth/login\", {\n    method: \"post\",\n    body: JSON.stringify(getState(\"loginForm\")),\n    headers: {\n      'Accept': \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  setState(\"loginForm.password\", \"\");\n  // Send the request with fetch()\n  fetch(request).then(res => {\n    return res.json();\n  }).then(json => {\n    if (json.currentUser) {\n      setState(\"currentUser\", json.currentUser);\n      setState(\"floor\", json.floor);\n    } else alert(json.error);\n  }).catch(error => {\n    alert(\"something went wrong :(\");\n  });\n}\n\nexport const logout = () => {\n  const url = \"/auth/logout\";\n  fetch(url).then(res => {\n    setEmptyState();\n    setState(\"cookie\", true);\n  }).catch(error => {\n    alert(error);\n  });\n};\n\nexport const getLocations = () => {\n  console.log(\"get locations\");\n  const url = \"/locations\";\n  fetch(url).then(res => {\n    if (res.status === 200) return res.json();\n    else return Promise.reject(\"server error\");\n  }).then(json => {\n    // const locs = [\"\\\"Location\\\"\"].concat(json);\n    setState(\"locationList\", json);\n  }).catch(error => {\n    alert(error);\n  });\n}\n\nexport const getMovies = () => {\n  console.log(\"get movies\");\n  const url = \"/movies\";\n  fetch(url).then(res => {\n    if (res.status === 200) return res.json();\n    else return Promise.reject(\"server error\");\n  }).then(json => {\n    const movs = json.map((movie) => {\n      movie.imdbInfo = false;\n      return movie;\n    });\n    console.log(movs);\n    setState(\"movieList\", movs);\n  }).catch(error => {\n    alert(error);\n  });\n}\n\nexport const addMovie = (e) => {\n  e.preventDefault();\n  console.log(\"add movie\");\n  const request = new Request('/addMovie', {\n    method: \"post\",\n    body: JSON.stringify(getState(\"addMovieForm\")),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  })\n  fetch(request).then((res) => {\n    return res.json();\n  }).then((json) => {\n    if (json.error) {\n      alert(json.error);\n    } else {\n      setState(\"addMovieForm\", {\n        name: \"\", locations: \"\\\"Location\\\"\",\n        location: \"\", bluray: false, dvd: false\n      });\n      getLocations();\n      alert(\"Added Movie\\nName: \" + json.name + \"\\nLocation: \" +\n        json.location + \"\\nbluray: \" + json.bluray + \" dvd: \" + json.dvd);\n    }\n  }).catch((err) => {\n    alert(err);\n  });\n}\n\nexport const imdbSearch = (id, title) => {\n  fetch('/imdb/' + title).then((res) => {\n    console.log(\"ret json\");\n    return res.json();\n  }).then((json) => {\n    console.log(json);\n    const newMovieList = getState(\"movieList\").map((movie) => {\n      if (movie._id !== id) {\n        return movie;\n      }\n      return {\n        \"_id\": movie._id, \"name\": movie.name, \"location\": movie.location,\n        \"bluray\": movie.bluray, \"dvd\": movie.dvd, \"imdbInfo\": true,\n        \"Year\": json.Year, \"Runtime\": json.Runtime, \"Genre\": json.Genre,\n        \"Director\": json.Director, \"Actors\": json.Actors, \"imdbRating\": json.imdbRating\n      }\n      /*\n      \"Year\": 1998, \"Runtime\": \"120min\", \"Genre\": \"Horror\", \"Director\": \"Wes Anderson\",\n          \"Actors\": \"Mike Myers, Eddie Murphy, Cameron Diaz, John Lithgow\", \"imdbRating\": \"7.8\"\n      */\n    })\n    setState(\"movieList\", newMovieList);\n    console.log(\"exit imdb\");\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const softDelete = (id) => {\n  // from deletedMovieList\n  const r = prompt(\"Are you sure (type yes)\", \"\");\n  if (r !== \"yes\") {\n    return;\n  }\n  const request = new Request('/movies/' + id, {\n    method: 'delete',\n    body: JSON.stringify({}),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  });\n\n  fetch(request).then((res) => {\n    return res.json();\n  }).then((json) => {\n    if (json.error) {\n      alert(json.error);\n    } else {\n      const movieList = getState(\"movieList\");\n      setState(\"movieList\", movieList.filter((movie) => movie._id !== id));\n    }\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const uploadFile = (e) => {\n  e.preventDefault();\n  let formData = new FormData();\n  formData.append(\"file\", getState(\"selectedFile\"));\n  fetch('/floor', {method: \"POST\", body: formData}).then((res) => {\n    return res.json();\n  }).then((json) => {\n    if (json.error) {\n      alert(json.error);\n    } else {\n      setState(\"floor\", json.floor);\n    }\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const fileChangeHandler = (e) => {\n  setState(\"selectedFile\", e.target.files[0])\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"./actions\";\n\nclass Header extends React.Component {\n  render() {\n    const currentUser = this.props.user;\n    return (\n      <nav>\n        <h1>Flask Movie API</h1>\n        {currentUser ?\n          <ul>\n            <li><span>{currentUser}</span> </li>\n            <li><Link to=\"/\"> Home </Link> </li>\n            <li><Link to=\"/floor\"> Floor Plan </Link> </li>\n            <li><button className=\"logout\" onClick={logout}> Log Out </button> </li>\n          </ul>\n          :\n          <ul>\n            <li><Link to=\"/register\"> Register </Link> </li>\n            <li><Link to=\"/login\"> Log In </Link> </li>\n          </ul>\n        }\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import { isPlainObject } from \"lodash-es\";\nimport React from \"react\";\nimport { getState, subscribe, unsubscribe } from \"statezero\";\n\nclass BaseReactComponent extends React.Component {\n    componentWillMount() {\n        const callback = state => {\n            this.setState(state);\n        };\n        this._subscription = subscribe(callback, this.filterState.bind(this));\n        const filteredState = this.filterState(getState());\n        if (!isPlainObject(filteredState)) {\n            throw new Error(\"The result of filterState() must be an object\");\n        }\n        this.setState(filteredState);\n    }\n\n    componentWillUnmount() {\n        unsubscribe(this._subscription);\n    }\n\n    filterState() {\n        // Sub-classes must override this method.\n        throw new Error(\"filterState() is not implemented\");\n    }\n}\n\nexport default BaseReactComponent;\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { getLocations, updateForm, updateCheckBox, addMovie } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\n\r\nclass CreateMovie extends BaseReactComponent {\r\n  filterState({ locationList, addMovieForm }) {\r\n    return { locationList, addMovieForm };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    getLocations();\r\n  }\r\n  render() {\r\n    const currentUser = this.props.user;\r\n    const { locationList, addMovieForm } = this.state;\r\n    return (\r\n      <div>\r\n        <Header user={currentUser} />\r\n        <section className=\"content\">\r\n          <header>\r\n            <h1>New Movie</h1>\r\n          </header>\r\n          <form onSubmit={e => addMovie(e)}>\r\n            <label>Title</label>\r\n            <input className=\"addMovieForm\" name=\"name\" type=\"text\"\r\n                  value={addMovieForm.name} onChange={e => updateForm(e.target)} required />\r\n            <label>Location (select existing or enter new)</label>\r\n            <select className=\"addMovieForm\" name=\"locations\" value={addMovieForm.locations} onChange={e => updateForm(e.target)}>\r\n              <option value='\"Location\"'>\"Location\"</option>\r\n              { locationList.map((location) => <option value={location}>{location}</option> ) }\r\n            </select>\r\n            <input className=\"addMovieForm\" name=\"location\" type=\"text\"\r\n                  value={addMovieForm.location} onChange={e => updateForm(e.target)} id=\"loc\"/>\r\n            <label> Bluray Copy <input type=\"checkbox\" checked={addMovieForm.bluray} className=\"addMovieForm\"\r\n                  onChange={e => updateCheckBox(e.target)} name=\"bluray\" /> </label>\r\n            <label> DVD Copy <input type=\"checkbox\" checked={addMovieForm.dvd} className=\"addMovieForm\"\r\n                  onChange={e => updateCheckBox(e.target)} name=\"dvd\" /> </label>\r\n            <input className=\"movieBtn\" type=\"submit\" value=\"Save\" />\r\n          </form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateMovie;","import React from 'react';\r\nimport Header from './Header';\r\nimport { updateForm, register } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\n\r\nclass Register extends BaseReactComponent {\r\n  filterState({ registerForm }) {\r\n    return { registerForm };\r\n  }\r\n\r\n  render() {\r\n    const currentUser = this.props.user;\r\n    const { registerForm } = this.state;\r\n    return (\r\n      <div>\r\n        <Header user={currentUser} />\r\n        <section className=\"content\">\r\n          <header>\r\n            <h1>Register</h1>\r\n          </header>\r\n          {/*<div class=\"flash\"> Error </div> */}\r\n          <form onSubmit={e => register(e)}>\r\n            <label>Username</label>\r\n            <input name=\"name\"\r\n                  className=\"registerForm\"\r\n                  value={registerForm.name}\r\n                  onChange={e => updateForm(e.target)}\r\n                  required />\r\n            <label>Password</label>\r\n            <input type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"registerForm\"\r\n                  value={registerForm.password}\r\n                  onChange={e => updateForm(e.target)} \r\n                  required />\r\n            <input type=\"submit\" value=\"Register\" />\r\n          </form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Header from './Header';\r\nimport Axios from 'axios';\r\nimport { uploadFile, fileChangeHandler } from \"./actions\";\r\n\r\nclass Floor extends React.Component {\r\n  //constructor(props) {\r\n  //  super(props);\r\n  // this.props.history.push(\"/\");\r\n  //}\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { source: \"\", planLoad: false }\r\n    Axios.get(\r\n      `/uploads/${this.props.user}/floor_plan.jpg`,\r\n      { responseType: 'arraybuffer' }\r\n    ).then(response => {\r\n      const base64 = btoa(\r\n        new Uint8Array(response.data).reduce(\r\n          (data, byte) => data + String.fromCharCode(byte), ''\r\n        ),\r\n      );\r\n      this.setState({ source: \"data:;base64,\" + base64 });\r\n      this.setState({ planLoad: true });\r\n    });\r\n  }\r\n  render() {\r\n    const currentUser = this.props.user;\r\n    const floor = this.props.floor;\r\n    console.log(\"floor \" + floor);\r\n    console.log(\"planLoad \" + this.state.planLoad);\r\n    return (\r\n      <div>\r\n        <Header user={currentUser} />\r\n        <section className=\"content\">\r\n          <header>\r\n            <h1>Floor Plan</h1>\r\n          </header>\r\n          <form method=\"post\" encType=\"multipart/form-data\" onSubmit={e => uploadFile(e)}>\r\n            <input className=\"fileInpt\" type=\"file\" name=\"file\" onChange={fileChangeHandler} />\r\n            <input className=\"fileInpt\" type=\"submit\" value=\"Upload Floor Plan Image\" />\r\n          </form>\r\n          {this.state.planLoad && floor && <img src={this.state.source} alt=\"Floor Plan\"></img>}\r\n           {/* {`./uploads/${currentUser}/floor_plan.jpg`} */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Floor;","import React from 'react';\r\nimport Header from './Header';\r\nimport { updateForm, login } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\n\r\nclass Login extends BaseReactComponent {\r\n  filterState({ loginForm }) {\r\n    return { loginForm };\r\n  }\r\n\r\n  render() {\r\n    const currentUser = this.props.user;\r\n    const { loginForm } = this.state;\r\n    return (\r\n      <div>\r\n        <Header user={currentUser} />\r\n        <section className=\"content\">\r\n          <header>\r\n            <h1>Login</h1>\r\n          </header>\r\n          <form onSubmit={e => login(e)}>\r\n            <label>Username</label>\r\n            <input name=\"name\"\r\n                  className=\"loginForm\"\r\n                  value={loginForm.name}\r\n                  onChange={e => updateForm(e.target)}\r\n                  required />\r\n            <label>Password</label>\r\n            <input type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"loginForm\"\r\n                  value={loginForm.password}\r\n                  onChange={e => updateForm(e.target)} \r\n                  required />\r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { imdbSearch, softDelete } from \"./actions\";\r\n\r\nclass Movie extends React.Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <li className=\"movieList\">\r\n        <article className=\"post\">\r\n          {movie.imdbInfo && <div className=\"imdb\">\r\n            Year: {movie.Year} <br />\r\n            Runtime: {movie.Runtime} <br />\r\n            IMDb Raiting: {movie.imdbRating} <br />\r\n            Genre: {movie.Genre} <br />\r\n            Director: {movie.Director} <br />\r\n            Actors: {movie.Actors}\r\n          </div>}\r\n          <header>\r\n            <div>\r\n              <h1> {movie.name} </h1>\r\n              <div className=\"about\"> at {movie.location} </div>\r\n            </div>\r\n          </header>\r\n          <p className=\"body\">\r\n            {movie.bluray && \"Bluray Copy\"}\r\n            {movie.bluray && movie.dvd && <br />}\r\n            {movie.dvd && \"DVD Copy\"}\r\n          </p>\r\n          <button className=\"movieBtn\" onClick={(e) => softDelete(movie._id)}> Delete </button>\r\n          <button className=\"movieBtn\" onClick={(e) => imdbSearch(movie._id, movie.name)}> IMDB </button>\r\n          <hr />\r\n        </article>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Header from './Header';\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from './Movie';\r\nimport { getMovies } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\n\r\nclass Main extends BaseReactComponent {\r\n  filterState({ movieList }) {\r\n    return { movieList };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    getMovies();\r\n    // this.props.history.push(\"/\");\r\n    /*\r\n    this.state = {\r\n      movieList: [\r\n        {\r\n          \"name\": \"Shrek\", \"location\": \"Desk\", \"bluray\": true,\r\n          \"dvd\": false, \"_id\": 12345, \"imdbInfo\": false,\r\n        },\r\n        {\r\n          \"name\": \"Snatch\", \"location\": \"Desk\", \"bluray\": true,\r\n          \"dvd\": true, \"_id\": 12346, \"imdbInfo\": true,\r\n          \"Year\": 1998, \"Runtime\": \"120min\", \"Genre\": \"Horror\", \"Director\": \"Wes Anderson\",\r\n          \"Actors\": \"Mike Myers, Eddie Murphy, Cameron Diaz, John Lithgow\", \"imdbRating\": \"7.8\"\r\n        },\r\n        {\r\n          \"name\": \"Student\", \"location\": \"Desk\", \"bluray\": false,\r\n          \"dvd\": true, \"_id\": 12347, \"imdbInfo\": true,\r\n          \"Year\": 1998, \"Runtime\": \"120min\", \"Genre\": \"Horror\", \"Director\": \"Wes Anderson\",\r\n          \"Actors\": \"Mike Myers, Eddie Murphy, Cameron Diaz, John Lithgow, Roman Pol, Tom Bob, Mich Tree\", \"imdbRating\": \"7.8\"\r\n        }\r\n      ]\r\n    } */\r\n  }\r\n  render() {\r\n    const { movieList } = this.state;\r\n    const currentUser = this.props.user;\r\n    return (\r\n      <div>\r\n        <Header user={currentUser} />\r\n        <section className=\"content\">\r\n          <header>\r\n            <h1>Movies</h1>\r\n            <Link to=\"/add-movie\" className=\"action\"> Add New Movie </Link>\r\n          </header>\r\n          <ul className=\"movieList\">\r\n            {movieList.map((movie) => {\r\n              return (<Movie key={movie._id} movie={movie} />);\r\n            })}\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport './style.css';\nimport CreateMovie from './CreateMovie';\nimport Register from './Register';\nimport Floor from './Floor';\nimport Login from './Login';\nimport Main from './Main';\nimport BaseReactComponent from \"./BaseReactComponent\";\nimport { readCookie } from \"./actions\";\n\nclass App extends BaseReactComponent {\n  filterState({ currentUser, cookie, floor }) {\n    return { currentUser, cookie, floor };\n  }\n\n  constructor(props) {\n    super(props);\n    readCookie();\n    // this.state = { user: \"R\", cookie: false }\n  }\n\n  render() {\n    const { currentUser, cookie, floor } = this.state;\n    if (cookie === false) {\n      return (<section className=\"content\"> <header> <h1> Loading </h1> </header> </section>);\n    }\n    return (\n      <BrowserRouter>\n        <Switch> {/* Similar to a switch statement - shows the component depending on the URL path */}\n          <Route exact path={\"/floor\"} render={({ history }) => (currentUser ? <Floor history={history} user={currentUser} floor={floor} /> : <Redirect to='/' />)} />\n          <Route exact path={\"/add-movie\"} render={({ history }) => (currentUser ? <CreateMovie history={history} user={currentUser} /> : <Redirect to='/' />)} />\n          <Route exact path={\"/register\"} render={({ history }) => (!currentUser ? <Register history={history} /> : <Redirect to='/' />)} />\n          <Route exact path={\"/login\"} render={({ history }) => (!currentUser ? <Login history={history} /> : <Redirect to='/' />)} />\n          <Route exact path={\"/\"} render={({ history }) => (currentUser ? <Main history={history} user={currentUser} /> : <Redirect to='/login' />)} />\n          <Route render={() => <section className=\"content\"> <header> <h1> 404 Not found </h1> </header> </section>} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { startLogging } from \"statezero\";\nimport { setEmptyState } from \"./actions\";\n\nsetEmptyState();\nstartLogging();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}